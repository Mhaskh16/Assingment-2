import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import random


#all_data = pd.read_excel(r'API_Download_DS2_en_excel_v2_6240987.xls', sheet_name="Data")
#all_data.drop(["Country Code", "Indicator Code"], axis=1, inplace=True)
def worldbank_data(file_name):
  data=pd.read_excel(file_name, sheet_name="Data")
  dataFrame1_countries = data[['Country Name','Indicator Name','1960', '1961', '1962', '1963', '1964', '1965', '1966', '1967', '1968',
       '1969', '1970', '1971', '1972', '1973', '1974', '1975', '1976', '1977',
       '1978', '1979', '1980', '1981', '1982', '1983', '1984', '1985', '1986',
       '1987', '1988', '1989', '1990', '1991', '1992', '1993', '1994', '1995',
       '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003', '2004',
       '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013',
       '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022']]
  dataFrame2_years = data[['Indicator Name','1960', '1961', '1962', '1963', '1964', '1965', '1966', '1967', '1968',
       '1969', '1970', '1971', '1972', '1973', '1974', '1975', '1976', '1977',
       '1978', '1979', '1980', '1981', '1982', '1983', '1984', '1985', '1986',
       '1987', '1988', '1989', '1990', '1991', '1992', '1993', '1994', '1995',
       '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003', '2004',
       '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013',
       '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022']]
  dataFrame1_countries = pd.DataFrame(dataFrame1_countries)
  dataFrame2_years = pd.DataFrame(dataFrame2_years)
  return dataFrame1_countries, dataFrame2_years

filename =  "API_Download_DS2_en_excel_v2_6240987.xls"
countries, years=worldbank_data(filename)


selected_countries = ['Pakistan', 'Bangladesh']

selected_indicators = [
    'Population, total',
    'Exports of goods and services (BoP, current US$)',
    'Imports of goods and services (constant 2015 US$)',
    'CO2 emissions from electricity and heat production, total (% of total fuel combustion)',
    'CO2 emissions from residential buildings and commercial and public services (% of total fuel combustion)',
    'Manufactures exports (% of merchandise exports)',
    'Rural population growth (annual %)',
    'Urban population (% of total population)',
]

filtered_data = countries[
    (countries['Country Name'].isin(selected_countries)) &
    (countries['Indicator Name'].isin(selected_indicators))
]


#Showing row wise Indicators Values in Matrics

for indicator in selected_indicators:
    indicator_data = filtered_data[filtered_data['Indicator Name'] == indicator]


    numeric_data = indicator_data.drop(['Country Name', 'Indicator Name'], axis=1)


    row_mean_values = numeric_data.mean(axis=1)


    row_std_dev_values = numeric_data.std(axis=1)


    print(f"Metrics Row-wise for {indicator}")
    print(f"Mean Values:")
    print(row_mean_values)
    print(f"\nStandard Deviation Values:")
    print(row_std_dev_values)
    print("\n" + "=" * 50 + "\n")
    
#Describing Indicators    
    
for indicator in selected_indicators:
    indicator_data = filtered_data[filtered_data['Indicator Name'] == indicator]

    numeric_data = indicator_data.drop(['Country Name', 'Indicator Name'], axis=1)

